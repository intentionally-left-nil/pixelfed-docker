# Primary (https) server for ${px.domain.web}
server {
  server_name ${px.domain.web};
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  include /etc/nginx/include.d/ssl.conf;

  root /var/www/public;
  index index.html index.htm index.php;
  error_page 404 /index.php;
  charset utf-8;
  add_header X-Frame-Options "SAMEORIGIN";
  add_header X-XSS-Protection "1; mode=block";
  add_header X-Content-Type-Options "nosniff";

  location / {
    client_body_buffer_size ${px.pixelfed.max_size_mb}M;
    client_max_body_size ${px.pixelfed.max_size_mb}M;
    try_files $uri $uri/ /index.php?$query_string;
  }

  location = /favicon.ico {
    access_log off;
    log_not_found off;
  }

  location = /robots.txt {
    access_log off;
    log_not_found off;
  }

  location ~ [^/]\.php(/|$) {
    fastcgi_split_path_info ^(.+?\.php)(/.*)$;
    if (!-f $document_root$fastcgi_script_name) {
      return 404;
    }
    # Mitigate https://httpoxy.org/ vulnerabilities
    fastcgi_param HTTP_PROXY "";
    fastcgi_index index.php;
    include fastcgi_params;
    fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_pass app:9000;
    client_body_buffer_size ${px.pixelfed.max_size_mb}M;
    client_max_body_size ${px.pixelfed.max_size_mb}M;
  }

  location ~ ^/\.well-known/acme-challenge/([-_a-zA-Z0-9]+)$ {
    default_type text/plain;
    return 200 "$1.${px.acme.account_thumbprint}";
  }

  # Prevent access to all files starting with dot (eg .env, .htaccess)
  # except for .well-known
  location ~ /\.(?!well-known).* {
      deny all;
  }
}

# http server for ${px.domain.web}. It just redirects to the https version
server {
  server_name ${px.domain.web};
  listen 80;
  listen [::]:80;

  location ~ ^/\.well-known/acme-challenge/([-_a-zA-Z0-9]+)$ {
    default_type text/plain;
    return 200 "$1.${px.acme.account_thumbprint}";
  }

  location / {
    return 301 https://$host$request_uri;
  }
}

# https server for ${px.domain.web_alias}. It redirects to the primary server
server {
  server_name ${px.domain.web_alias};
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  include /etc/nginx/include.d/ssl.conf;
  return 301 https://${px.domain.web}$request_uri;
}

# http server for ${px.domain.web_alias}. It redirects to the primary server
server {
  server_name ${px.domain.web_alias};
  listen 80;
  listen [::]:80;

  location ~ ^/\.well-known/acme-challenge/([-_a-zA-Z0-9]+)$ {
    default_type text/plain;
    return 200 "$1.${px.acme.account_thumbprint}";
  }

  location / {
    return 301 https://${px.domain.web}$request_uri;
  }
}

# Sinkhole server, if the host doesn't match any of the known domains. Kills the connection
server {
  server_name _;
  listen 80 default_server deferred;
  listen [::]:80 default_server deferred;
  return 444;
}
