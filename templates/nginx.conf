# Primary (https) server for ${px.domain.web}
server {
  server_name ${px.domain.web};
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  include /etc/nginx/include.d/ssl.conf;

  location ~ ^/\.well-known/acme-challenge/([-_a-zA-Z0-9]+)$ {
    default_type text/plain;
    return 200 "$1.${px.acme.account_thumbprint}";
  }

  location / {
    client_max_body_size ${px.pixelfed.max_size_mb}M;
    default_type text/plain;
    return 200 'Hello, nginx!';
  }
}

# http server for ${px.domain.web}. It just redirects to the https version
server {
  server_name ${px.domain.web};
  listen 80;
  listen [::]:80;

  location ~ ^/\.well-known/acme-challenge/([-_a-zA-Z0-9]+)$ {
    default_type text/plain;
    return 200 "$1.${px.acme.account_thumbprint}";
  }

  location / {
    return 301 https://$host$request_uri;
  }
}

# https server for ${px.domain.web_alias}. It redirects to the primary server
server {
  server_name ${px.domain.web_alias};
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  include /etc/nginx/include.d/ssl.conf;
  return 301 https://${px.domain.web}$request_uri;
}

# http server for ${px.domain.web_alias}. It redirects to the primary server
server {
  server_name ${px.domain.web_alias};
  listen 80;
  listen [::]:80;

  location ~ ^/\.well-known/acme-challenge/([-_a-zA-Z0-9]+)$ {
    default_type text/plain;
    return 200 "$1.${px.acme.account_thumbprint}";
  }

  location / {
    return 301 https://${px.domain.web}$request_uri;
  }
}

# Sinkhole server, if the host doesn't match any of the known domains. Kills the connection
server {
  server_name _;
  listen 80 default_server deferred;
  listen [::]:80 default_server deferred;
  return 444;
}
